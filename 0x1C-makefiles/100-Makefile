# Usage: make [all/clean/oclean/fclean] -f [file]


CC = gcc
SRC = main.c school.c
OBJ = $(SRC:.c=.o)
NAME = school
CFLAGS = -Wall -Werror -Wextra -pedantic

# Implicit rule to compile source files and link into executable
%.o: %.c m.h  # Enforce m.h dependency
  $(CC) $(CFLAGS) -c $< -o $@  # Use flags without $(CFLAGS)

# Target to build the final executable (with automatic dependency checking)
all: $(SRC)  # All source files must exist
  $(CC) $(SRC:.c=.o) -o $(NAME)  # Link object files into executable

# Clean target (ensures no failure)
clean:
  @$(RM) -rf $(NAME) *~ *.bak  # Delete executable, temporary files

# Fclean target (ensures no failure)
fclean: clean

# Re target (forces recompilation, ensures no failure)
re:
  @$(RM) -rf $(NAME) *~ *.bak  # Clean first
  $(MAKE)  # Rebuild everything

# Phony targets (ensure no failure)
.PHONY: clean fclean re